-- Conky, a system monitor https://github.com/brndnmtthws/conky
--
-- This configuration file is Lua code. You can write code in here, and it will
-- execute when Conky loads. You can use it to generate your own advanced
-- configurations.
--
-- Try this (remove the `--`):
--
--   print("Loading Conky config")
--
-- For more on Lua, see:
-- https://www.lua.org/pil/contents.html

conky.config = {

	--Various settings

	background = false, 		-- forked to background
	cpu_avg_samples = 4,		-- The number of samples to average for CPU monitoring.
	diskio_avg_samples = 10,	-- The number of samples to average for disk I/O monitoring.
	double_buffer = true,		-- Use the Xdbe extension? (eliminates flicker)
	if_up_strictness = 'address',	-- how strict if testing interface is up - up, link or address
	net_avg_samples = 2,		-- The number of samples to average for net data
	no_buffers = true,		-- Subtract (file system) buffers from used memory?
	temperature_unit = 'celsius',	-- fahrenheit or celsius
	text_buffer_size = 2048,	-- size of buffer for display of content of large variables - default 256
	update_interval = 1,		-- update interval
	imlib_cache_size = 0,           -- disable image cache to get a new spotify cover per song


	--Placement

	alignment = 'top_right',	-- top_left,top_middle,top_right,bottom_left,bottom_middle,bottom_right,
					-- middle_left,middle_middle,middle_right,none
	--Arch Duoscreen
	--gap_x = -2550,
	gap_x = 15,			-- pixels between right or left border
	gap_y = 0,			-- pixels between bottom or left border
	minimum_height = 1000,		-- minimum height of window
	minimum_width = 500,		-- minimum height of window
	maximum_width = 600,		-- maximum height of window

	--Graphical

	border_inner_margin = 10, 	-- margin between border and text
	border_outer_margin = 5, 	-- margin between border and edge of window
	border_width = 0, 		-- border width in pixels
	default_bar_width = 0,		-- default is 0 - full width
	default_bar_height = 16,	-- default is 6
	default_gauge_height = 25,	-- default is 25
	default_gauge_width = 0,	-- default is 40
	default_graph_height = 60,	-- default is 25
	default_graph_width = 0,	-- default is 0 - full width
	default_shade_color = '#000000',	-- default shading colour
	default_outline_color = '#000000',	-- default outline colour
	draw_borders = false,		-- draw borders around text
	draw_graph_borders = true,	-- draw borders around graphs
	draw_shades = false,		-- draw shades
	draw_outline = false,		-- draw outline
	stippled_borders = 0,		-- dashing the border

	--Textual

	extra_newline = false,		-- extra newline at the end - for asesome's wiboxes
	format_human_readable = true,	-- KiB, MiB rather then number of bytes
	font = 'Roboto Mono:size=13',  	-- font for complete conky unless in code defined
	max_text_width = 0,		-- 0 will make sure line does not get broken if width too smal
	max_user_text = 16384,		-- max text in conky default 16384
	override_utf8_locale = true,	-- force UTF8 requires xft
	short_units = true,		-- shorten units from KiB to k
	top_name_width = 21,		-- width for $top name value default 15
	top_name_verbose = false,	-- If true, top name shows the full command line of  each  process - Default value is false.
	uppercase = false,		-- uppercase or not
	use_spacer = 'none',		-- adds spaces around certain objects to align - default none
	use_xft = true,			-- xft font - anti-aliased font
	xftalpha = 1,			-- alpha of the xft font - between 0-1

	--Windows

	own_window = true,		-- create your own window to draw
	own_window_argb_value = 100,    -- real transparency - composite manager required 0-255
	own_window_argb_visual = true,	-- use ARGB - composite manager required
	own_window_colour = '#000000',	-- set colour if own_window_transparent no
	own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',  -- if own_window true - just hints - own_window_type sets it
	own_window_transparent = true,	-- if own_window_argb_visual is true sets background opacity 0%
	own_window_title = 'system_conky',	-- set the name manually  - default conky "hostname"
	own_window_type = 'panel',	-- if own_window true options are: normal/override/dock/desktop/panel


	--Colours

	default_color = '#D9DDE2',	-- default color and border color
	color1 = '#FF0000',
	color2 = '#d6bf2a',
	color3 = '#cccccc',
	color4 = '#D9BC83',
	color5 = '#34a61e',
	color6 = '#FFFFFF',

	--Signal Colours
	color7 = '#1F7411',  		--green
	color8 = '#FFA726',  		--orange
	color9 = '#F1544B',  		--firebrick

    --Lua


};

conky.text = [[

${color6}${font Roboto:size=120}${alignc}${time %H}:${time %M}${font}

${color6}${font Roboto:size=22}${alignc}${time %A} ${time %B} ${time %e}, ${time %Y}${font}
${color5}${font Roboto:size=15}${voffset 2}S Y S T E M   ${hr 2}${font}${color}
${color2}${voffset 8}Hostname:${color} ${alignr}${exec hostname}
${color2}Distro:${color}${alignr}${execi 6000 lsb_release -a | grep 'Description'|awk {'print $2, $3'}}
${color2}Kernel:${color}${alignr}${exec uname} ${exec uname -r}
#Nvidia: ${alignr}${execp  nvidia-smi --query-supported-clocks=gpu_name --format=csv,noheader}
#Nvidia Driver: ${alignr}${execi 60000 nvidia-smi | grep "Driver Version"| awk {'print $3'}}
${color2}Uptime:${color} ${alignr}${uptime}

${color5}${font Roboto:size=15}P R O C E S S O R S  ${hr 2}${font}${color}
${color2}${voffset 8}CPU Freq:${color} $alignr${freq}MHz
${color2}CPU Temp:${color} $alignr${execi 10 sensors | grep 'Tctl' | awk {'print $2'}}
${color2}History:${color} ${alignr}${cpugraph 8,100}
${color2}${offset 30}CPU Core 1:${color} ${alignr}${offset -10}${cpu cpu1}%${alignr}${cpubar cpu1}
${color2}${offset 30}CPU Core 2:${color} ${alignr}${offset -10}${cpu cpu2}%${alignr}${cpubar cpu2}
${color2}${offset 30}CPU Core 3:${color} ${alignr}${offset -10}${cpu cpu3}%${alignr}${cpubar cpu3}
${color2}${offset 30}CPU Core 4:${color} ${alignr}${offset -10}${cpu cpu4}%${alignr}${cpubar cpu4}
${color2}${voffset 8}Top Processes${goto 222}cpu%${goto 274}mem%${color}
${voffset 4}     1  -  ${top name 1}${alignr}${goto 170} ${goto 222}${top cpu 1} ${goto 274}${top mem 1}
     2  -  ${top name 2}${alignr} ${goto 222}${top cpu 2} ${goto 274}${top mem 2}
     3  -  ${top name 3}${alignr} ${goto 222}${top cpu 3} ${goto 274}${top mem 3}
     4  -  ${top name 4}${alignr} ${goto 222}${top cpu 4} ${goto 274}${top mem 4}
     5  -  ${top name 5}${alignr} ${goto 222}${top cpu 5} ${goto 274}${top mem 5}

${color5}${font Roboto:size=15}M E M O R Y   ${hr 2}${font}${color}
${color2}${voffset 8}RAM: ${color}${alignr}${offset -10}${mem} / ${memmax}${alignr}${membar}
${color2}Swap:${color} ${alignr}${offset -10}${swap} / ${swapmax}${alignr}${swapbar}
${color2}${voffset 8}Top Processes${goto 222}cpu%${goto 274}mem%${color}
${voffset 4}     1  -  ${top_mem name 1}${alignr}${goto 170} ${goto 222}${top_mem cpu 1} ${goto 274}${top_mem mem 1}
     2  -  ${top_mem name 2}${alignr}${goto 170} ${goto 222}${top_mem cpu 2} ${goto 274}${top_mem mem 2}
     3  -  ${top_mem name 3}${alignr}${goto 170} ${goto 222}${top_mem cpu 3} ${goto 274}${top_mem mem 3}
     4  -  ${top_mem name 4}${alignr}${goto 170} ${goto 222}${top_mem cpu 4} ${goto 274}${top_mem mem 4}
     5  -  ${top_mem name 5}${alignr}${goto 170} ${goto 222}${top_mem cpu 5} ${goto 274}${top_mem mem 5}

# TODO: Get AMD GPU settings
#${color5}${font Roboto:size=15}G R A P H I C S  ${hr 2}${font}${color}
#${color2}${voffset 8}GPU Clocki:${color} ${alignr}${execi 60 nvidia-settings -q GPUCurrentClockFreqs | grep -m 1 Attribute | awk '{print $4}' | sed -e 's/\.//' | cut -d, -f1} MHz
#${color2}GPU Temp:${color}${alignr}${execi 60 nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader} Â°C
#${color2}Fan Speed:${color}${alignr}${execi 60 nvidia-settings -q [fan:0]/GPUCurrentFanSpeed -t} %
#${color2}Mem Used:${color}${alignr}${execi 60 nvidia-settings -q [gpu:0]/UsedDedicatedGPUMemory -t} / ${exec nvidia-settings -q [gpu:0]/TotalDedicatedGPUMemory -t} MiB0

${color5}${font Roboto:size=15}D R I V E S   ${hr 2}${font}${color}
${color2}${voffset 8}Root:${color} ${alignr}${offset -10}${fs_used /} / ${fs_size /}${alignr}${fs_bar}
${color2}I/O Read:${color} ${alignr}${offset -10}${diskio_read /dev/nvme1n1p4}${alignr}${diskiograph_read nvme1n1p4 8,100}
${color2}I/O Write:${color} ${alignr}${offset -10}${diskio_write /dev/nvme1n1p4}${alignr}${diskiograph_write nvme1n1p4 8,100}
#${color2}${voffset 8}SSD500 :${color} ${alignr}${offset -10}${fs_used /mnt/ssd500} / ${fs_size /mnt/ssd500}${alignr}${fs_bar /mnt/ssd500}
#${color2}I/O Read:${color} ${alignr}${offset -10}${diskio_read /dev/sda1}${alignr}${diskiograph_read sda1 8,100}
#${color2}I/O Write:${color} ${alignr}${offset -10}${diskio_write /dev/sda1}${alignr}${diskiograph_write sda1 8,100}
#${color2}${voffset 8}SSD1000 :${color} ${alignr}${offset -10}${fs_used /mnt/ssd1000} / ${fs_size /mnt/ssd1000}${alignr}${fs_bar /mnt/ssd1000}
#${color2}I/O Read:${color} ${alignr}${offset -10}${diskio_read /dev/sdb}${alignr}${diskiograph_read sdb 8,100}
#${color2}I/O Write:${color} ${alignr}${offset -10}${diskio_write /dev/sdb}${alignr}${diskiograph_write sdb 8,100}

${color5}${color5}${font Roboto:size=15}N E T W O R K   ${hr 2}${font}${color}
${color2}${voffset 8}IP Address: ${color} ${alignr}${addrs enp9s0}
${color2}Eth Up:${color} ${alignr}${offset -10$}${upspeed enp9s0}${alignr}${upspeedgraph enp9s0 8,100}
${color2}Eth Down:${color} ${alignr}${offset -10$}${downspeed enp9s0}${alignr}${downspeedgraph enp9s0 8,100}
]];
